name: build docker image and push docker image

on:
  release:
    types: [published]

env:
  NODE_VERSION: 20.x
  REPO_NAME: example-app

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Set Node.js ${{ env.NODE_VERSION }}"
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"

      - name: Install dependencies
        run: |
          npm install

      - name: Run npm build
        run: |
          npm run build
        # env:
        #   NODE_ENV: 'production'

  build_docker_image:
    runs-on: ubuntu-latest
    environment: Production
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.REGISTRY_SERVER }}/${{ env.REPO_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: "Login to registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args:
